{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "037af897_07a30000",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T11:12:37Z",
      "side": 1,
      "message": "During today\u0027s call Andre4a volunteered to add a new patch as a parent of this one. In that patch, the `gamma` and `CR` parameter will be changed into an `effective-area` from which `gamma` will be derived. The CR *shape* will be provided via code (i.e., not via the equipt_config.json), and the actual effective value of CR will be determined from this predefined shape and the effective_area of the fiber. There will also be an option for providing a vector of the CR as a function of frequency; in that case, the built-in CR shape won\u0027t be used at all for that particular fiber type.",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4320a12c_215b5df1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-30T11:06:52Z",
      "side": 1,
      "message": "On today\u0027s call Andrea reported that when he derives the Aeff from gamma, there\u0027s some small discrepancy. Jonas suggested to take a look at the actual difference, and if it\u0027s a non-negligible one, we should probably distribute several fiber types in the library.\n\nAndrea will convert the gamma into Aeff and upload a patch which switches GNPy to compute gamma from Aeff.",
      "parentUuid": "037af897_07a30000",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a62af1b7_1a15ff75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-11-30T21:57:19Z",
      "side": 1,
      "message": "About the fiber type varieties I added to the eqpt library a long time ago:\n\nNZDF of course stands for Nonzero Dispersion Fiber and was modeled on OFS TrueWave (Corning LEAF is similar) with effective area of 72 μm²:\n\nhttps://fiber-optic-catalog.ofsoptics.com/documents/pdf/TrueWave-LA-Fiber-158-web.pdf\n\nLOF was modeled on OFS TeraWave with a large effective area of 125 μm²:\n\nhttps://fiber-optic-catalog.ofsoptics.com/documents/pdf/TeraWave-ULL-Single-mode-Fiber-fap-162-web.pdf\n\nSince there is no \"industry standard\" abbreviation for this type of fiber I think I just picked LOF for Linear Optical Fiber.\n\nFor converting Aeff to gamma I think I assumed a nonlinear index, n2, of 2.6e-20 m²/W.\n\nAll these numbers seem reasonable and I don\u0027t think there is any need to change results of existing simulations.",
      "parentUuid": "4320a12c_215b5df1",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea5a067d_03033358",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-12-05T21:53:35Z",
      "side": 1,
      "message": "\u003e The Raman pump parameter pump_loss_coef has been removed\n\nThis is a bit confusing since I can\u0027t find any pump_loss_coef parameter in the current version of the code.",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a5da62a_aaf54c70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-12-06T18:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a62af1b7_1a15ff75",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "513c6c76_04bdceca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-12-06T21:43:30Z",
      "side": 1,
      "message": "Does this parameter exist? If not, I think the commit message should be changed.",
      "parentUuid": "ea5a067d_03033358",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f0986fd_234330f4",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T09:17:12Z",
      "side": 1,
      "message": "if I\u0027m reading this correctly, this code takes the provided parameters, which describe how a \"positive delta of frequency\" affect the \"cr parameter\", and applies a negative value of each CR to each \"negative frequency offset\". In other words, there\u0027s some undocumented transformation of the data.\n\nI suppose that this is scientifically sound, but please:\n- add an inline comment to the code explaining what\u0027s going on here,\n- document the CR parameter in the docs, including the fact that the other, symmetrical part is auto-generated at runtime",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 89
      },
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53bbef8b_13ff412b",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T11:12:37Z",
      "side": 1,
      "message": "Andrea reported during the call that this is just an implementation detail. I would like to have an inline comment in the code for that, though.",
      "parentUuid": "4f0986fd_234330f4",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 89
      },
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76e58497_68d1139b",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 25
      },
      "lineNbr": 324,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-12-06T18:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53bbef8b_13ff412b",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 89
      },
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9ff2218_4e156138",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 25
      },
      "lineNbr": 484,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-12-05T21:53:35Z",
      "side": 1,
      "message": "Simulation crashes when temperature is missing so why not raise an error already here for this case as well?",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cddbab0_8e5894ee",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 25
      },
      "lineNbr": 484,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-12-06T18:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9ff2218_4e156138",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ac8b4d1_6c9405a1",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 25
      },
      "lineNbr": 31,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-11-16T08:33:13Z",
      "side": 1,
      "message": "Ramam pump units typically use two orthogonally polarized pump lasers per frequency combined with a PBC. Does the power here refer to power per polarization or total power in both polarizations?",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0650073d_5ca5dc39",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 25
      },
      "lineNbr": 31,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-11-16T09:32:05Z",
      "side": 1,
      "message": "That is the total power and the pump is assumed to be fully depolarized",
      "parentUuid": "6ac8b4d1_6c9405a1",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25745215_be6c0af7",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 25
      },
      "lineNbr": 31,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-11-16T09:41:30Z",
      "side": 1,
      "message": "Ok. It seems Raman pump parameters are not currently covered by the documentation at all. It would be good to add some documentation, including this assumption about power and polarization.",
      "parentUuid": "0650073d_5ca5dc39",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8bf82a6_82341708",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 25
      },
      "lineNbr": 31,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T11:12:37Z",
      "side": 1,
      "message": "+1, please document this in the docs",
      "parentUuid": "25745215_be6c0af7",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acec42c7_785117f7",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 25
      },
      "lineNbr": 31,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-12-06T18:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8bf82a6_82341708",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee3bd106_4d110e2b",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T09:17:12Z",
      "side": 1,
      "message": "\u003e linters-diff-ci: F541 f-string is missing placeholders\n\nPlease fix.",
      "parentUuid": "81456c4c_5faba2b2",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "774f4bb0_c0efb7fb",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 25
      },
      "lineNbr": 134,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-12-06T18:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee3bd106_4d110e2b",
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2fa64c_02a337f6",
        "filename": "tests/invocation/openroadm-v5-Stockholm-Gothenburg",
        "patchSetId": 25
      },
      "lineNbr": 9,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T09:17:12Z",
      "side": 1,
      "message": "I\u0027m not super-thrilled by this. From the user experience point of view, does it add value to print this?",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 9,
        "endChar": 45
      },
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85a4523c_468fc206",
        "filename": "tests/invocation/openroadm-v5-Stockholm-Gothenburg",
        "patchSetId": 25
      },
      "lineNbr": 9,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-11-16T11:12:37Z",
      "side": 1,
      "message": "During the call we decided to not take any direct action for this. However, as per the gamma -\u003e effective_area change and the move of actual CR shape to code (see the patchset-level comment), this will actually be solved as a side effect of that.",
      "parentUuid": "ab2fa64c_02a337f6",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 9,
        "endChar": 45
      },
      "revId": "7259e61658e1630f0d6331163792330062c7addd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}