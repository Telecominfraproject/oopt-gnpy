{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dde20c24_ebd0c755",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-04T13:40:45Z",
      "side": 1,
      "message": "Recheck",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7dedde5_84427d04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-04T13:50:59Z",
      "side": 1,
      "message": "Recheck",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e8e9205_bf8e8fbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-04T15:08:24Z",
      "side": 1,
      "message": "Recheck",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e51a9f7f_75c9a538",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-11T19:25:26Z",
      "side": 1,
      "message": "recheck",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e39085e_c7ddbbde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-19T08:51:04Z",
      "side": 1,
      "message": "recheck",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dd3bfec_a491df45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-19T09:04:48Z",
      "side": 1,
      "message": "The test failure happens because Zuul correctly tests this change as-if it was merged into the current master. The current master has moved a bit, there are now a few more tests, and they start failing once this is merged. I\u0027ll check if I can make the test result more readable so that it\u0027s easier t see what exactly is the difference.",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e46be4a3_3fec5f86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-22T16:15:37Z",
      "side": 1,
      "message": "Seems that this is due to the rounding introduced by \"e1f2c55942d36019ae6ff4d13c2d6c91a1e40e47 Remove the representation error due to floating point\"\nAll errors come from the same figure 17.5267625, that is rounding sometimes 17.526762 and sometimes 17.526763\n\nHere is the diff.\n\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n92574c92574\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101162c101162\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101181c101181\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101200c101200\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101219c101219\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101238c101238\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101257c101257\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101276c101276\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101295c101295\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101314c101314\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101333c101333\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101352c101352\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101371c101371\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101390c101390\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101409c101409\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n101428c101428\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134488c134488\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134507c134507\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134526c134526\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134545c134545\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134564c134564\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134583c134583\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134602c134602\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134621c134621\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134640c134640\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134659c134659\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134678c134678\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134697c134697\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134716c134716\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134735c134735\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,\n134754c134754\n\u003c         \"gain_target\": 17.526762,\n---\n\u003e         \"gain_target\": 17.526763,",
      "parentUuid": "2dd3bfec_a491df45",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7af6c602_4d5620c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-26T10:06:10Z",
      "side": 1,
      "message": "I think that we could change the roune to truncate for the to_json function. This should solve the issue...",
      "parentUuid": "e46be4a3_3fec5f86",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50b88fef_033736fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-10-26T13:26:43Z",
      "side": 1,
      "message": "The reason for the failure seems to be that after this change, self.effective_gain is of type numpy.float64 while before it is standard python float and these behave differently when rounding:\n\n \u003e\u003e\u003e round(17.5267625, 6)\n 17.526763\n \u003e\u003e\u003e round(np.float64(17.5267625), 6)\n 17.526762\n\nI\u0027m not sure just truncating instead is the correct solution...",
      "parentUuid": "7af6c602_4d5620c9",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd34ce0d_615d02a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-10-26T16:20:16Z",
      "side": 1,
      "message": "Ahhh ! This explains!\nthanks ! \nAny other idea instead of using truncating in the place of round ?",
      "parentUuid": "50b88fef_033736fd",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09ed16d7_fbde653c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-28T15:23:04Z",
      "side": 1,
      "message": "I dug into this a little bit, and it turns out that there are even more rounding options in numpy. These are well explained here:\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.around.html\n\nMy TL;DR is that there\u0027s np.round(), np.around() and also np.format_float_positional(). As a super-dirty hack, this one presents a \"stable\" JSON roundtrip (on my laptop, anyway):\n\n --- a/gnpy/core/elements.py\n +++ b/gnpy/core/elements.py\n @@ -579,7 +580,7 @@ class Edfa(_Node):\n                  \u0027type\u0027: type(self).__name__,\n                  \u0027type_variety\u0027: self.params.type_variety,\n                  \u0027operational\u0027: {\n -                    \u0027gain_target\u0027: round(self.effective_gain, 6),\n +                    \u0027gain_target\u0027: round(float(format_float_positional(self.effective_gain, 6)), 6),\n                      \u0027delta_p\u0027: self.delta_p,\n                      \u0027tilt_target\u0027: self.tilt_target,\n                      \u0027out_voa\u0027: self.out_voa\n\n...but doing that would be obviously rather ugly. We should also keep in mind that the output here is JSON, and that https://datatracker.ietf.org/doc/html/rfc7159#section-6 doesn\u0027t say much about any required precision or stability. This will be \"solved\" by the YANG I/O format which uses decimal64 data type with an explicit number of decimal points (at which point we will have to decide how to generate these values, and what do we expect of them in general).\n\nCan we simply adjust the expected data for this particular failure?",
      "parentUuid": "bd34ce0d_615d02a7",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b71948_b4f26e6c",
        "filename": "gnpy/core/info.py",
        "patchSetId": 21
      },
      "lineNbr": 169,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-19T08:51:04Z",
      "side": 1,
      "message": "\u003e linters-diff-ci: W293 blank line contains whitespace\n\nPlease fix.",
      "parentUuid": "b2cb265b_49401f0c",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8581e30_623da6bf",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 21
      },
      "lineNbr": 98,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-10-19T08:51:04Z",
      "side": 1,
      "message": "I prefer fixes like these done in a separate commit.",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c0f5cc7_066cea99",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 21
      },
      "lineNbr": 98,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-10-26T13:48:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8581e30_623da6bf",
      "revId": "ac16df54d1800edcde68ae992b73e65c816e2cba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}