{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b2bb6923_1e866694",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "Thanks, I like the progress of this patch. Comments inline.",
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5410f0a6_a3645868",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "Just a reminder for myself that an \"exhaustive\" type signature would require PEP-0646, and that\u0027s not been implemented yet. So there\u0027s no type annotatin to say \"an array of NxN channel offsets\".",
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a456f866_0d595bf6",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 161,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "- please add a type annotation saying that `si` is also a SpectralInformation instance\n- please call it `other` as per the usual Python idiom for operators like this one (\"self\" and \"other\" go nicely together)",
      "range": {
        "startLine": 161,
        "startChar": 22,
        "endLine": 161,
        "endChar": 24
      },
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c1a9b3_7e54b619",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 183,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "I think this version only supports arbitrary distribution of carriers, but the carriers are expected to be uniform in all other aspects, so a better name is more suitable.\n\nPerhaps a @staticmethod within SpectralInformation, like this:\n \nclass SpectralInformation:\n# ...\n    @staticmethod\n    def from_frequencies(...):\n       ...",
      "range": {
        "startLine": 183,
        "startChar": 4,
        "endLine": 183,
        "endChar": 41
      },
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7bee652_fb1d1e29",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 184,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "please add type annotations here",
      "range": {
        "startLine": 183,
        "startChar": 42,
        "endLine": 184,
        "endChar": 83
      },
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "300148f8_3b1ed496",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 185,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "This comment paraphrases the function\u0027s name I\u0027m afraid, so as a developer, it doesn\u0027t help me understand the code. Why should I use that instead of the SpectrumInformation\u0027s constructor?\n\nA better version of documentation would tell me how the input parameters are reflected in the output, perhaps with some examples. What about this:\n \n\u0027\u0027\u0027Create SpectrumInformation over the specified set of frequencies\n \nThis is just a wrapper around SpectralInformation.__init__() to use when\neverything but actual channel frequencies is uniform.\n\u0027\u0027\u0027",
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9280f4aa_2a795469",
        "filename": "gnpy/core/info.py",
        "patchSetId": 13
      },
      "lineNbr": 189,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "This is slightly on the nitpicking level, but since I\u0027ve got these other comments anyway -- why do we want to support calling with a scalar value here? The advantages are:\n\n- one saves a pair of []\n\nthe disadvantages are:\n\n- two more lines of code\n- a more complex type signature\n- a variable called \"frequency\" that holds *frequencies*, potentially confusing users\n\nTL;DR: I\u0027m not a huge fan of adding code for a potential convenience at some future point. Let\u0027s turn this into a Sized, please.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 189,
        "endChar": 38
      },
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5cdda36_9a2086f3",
        "filename": "tests/test_info.py",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-24T22:38:39Z",
      "side": 1,
      "message": "might as well test the df() here",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 24,
        "endChar": 48
      },
      "revId": "11b1221abf85574b3a2648a59bdda3c81b451a0d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}