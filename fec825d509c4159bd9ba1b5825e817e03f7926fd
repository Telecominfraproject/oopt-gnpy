{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a352521_e487f1ce",
        "filename": "tests/test_spectrum_assignment.py",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-26T23:30:19Z",
      "side": 1,
      "message": "nit: might be good to turn this into a fixture to prevent some repetition:\n \n@pytest.fixture\ndef request():\n    return {...}\n \n \ndef test_freq_slot_exists(setup, equipment, request):\n    request[\u0027effective_freq_slot\u0027] \u003d None\n    ....",
      "range": {
        "startLine": 303,
        "startChar": 4,
        "endLine": 303,
        "endChar": 22
      },
      "revId": "fec825d509c4159bd9ba1b5825e817e03f7926fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "720cb8cb_adf13a39",
        "filename": "tests/test_spectrum_assignment.py",
        "patchSetId": 5
      },
      "lineNbr": 343,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-26T23:30:19Z",
      "side": 1,
      "message": "nit: there\u0027s a comment on next lines, so please move this one there as well",
      "range": {
        "startLine": 343,
        "startChar": 29,
        "endLine": 343,
        "endChar": 104
      },
      "revId": "fec825d509c4159bd9ba1b5825e817e03f7926fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd14d5d_27d8622c",
        "filename": "tests/test_spectrum_assignment.py",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-05-26T23:30:19Z",
      "side": 1,
      "message": "I think this is hard to follow, but I\u0027m open to discussion. My suggestion is to turn these into additional \"pytest/mark.parametrize\" bits, like this:\n \n@pytest.mark.parametrize(\u0027n_orig, m_orig, n_final, m_final, blocking_reason\u0027,\n [\n   # ... comments can and should be added here for those \"itneresting\" cases\" ...\n ]\ndef test_n_m_requests(...):\n    ...\n    assert rqs[0].N \u003d\u003d n_final\n    assert rqs[0].M \u003d\u003d m_final\n    assert getattr(rqs[0], \u0027blocking_reason\u0027, None) \u003d\u003d blocking_reason\n\nSounds reasonable?",
      "range": {
        "startLine": 343,
        "startChar": 0,
        "endLine": 365,
        "endChar": 32
      },
      "revId": "fec825d509c4159bd9ba1b5825e817e03f7926fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}