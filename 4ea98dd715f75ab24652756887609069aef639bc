{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c81cf92d_ab0feba9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-10-28T00:38:05Z",
      "side": 1,
      "message": "I don\u0027t recall discussing this, but perhaps it\u0027s my fading memory.\n\nThis is a user-visible change of behavior, and it must be (as a minimum) well-documented (which means that this change should modify `docs/json.rst`) and clearly communicated. Since we\u0027ll be changing the IO format very soon anyway (YANG), should we maybe only change the internal code, but preserve the current, non-intuitive `f_min + spacing` for the legacy JSON, and only change the IO format for the YANG-based inputs?",
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "115fb48d_b714c497",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-10-28T16:54:22Z",
      "side": 1,
      "message": "You can see later on (https://review.gerrithub.io/c/Telecominfraproject/oopt-gnpy/+/507044/54) that for the initial spectrum definition, we decided to work this way. I think this change is needed because of consistency. Anyhow user were already confused with current f_min behaviour: they expect f_min being part of the simulation, and it adds additional headache to compute f_min with spacing to be sure that the intended f_min is used. I think this is something  Jonas suggested and I finally agreed that it is better.\nOK : \n- for the comm, you could add that in the release note\n- I have added an explaination in the doc",
      "parentUuid": "c81cf92d_ab0feba9",
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76bb25cd_fb77763d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-01T16:32:04Z",
      "side": 1,
      "message": "Yeah, I read https://review.gerrithub.io/c/Telecominfraproject/oopt-gnpy/+/507044/comment/ec702729_30517a01/ before I wrote this comment.\n\nHowever, I think that we should not be changing the IO format in a non-backward-compatible way -- and especially not in a release that\u0027s a bit rushed-up. I think that the confusion of users suddenly getting different results (and potentially also changing all of our consumers, e.g., ONOS, even if they are all only experimental) is a strong-enough reason to not merge this -- even if the docs explain that. We can discuss this during a call if you prefer, but I am really against such a subtle change. I\u0027m all in favor of changing this in the YANG interface (and I\u0027ve created #449 for this). I think it\u0027s much, much better to introduce the inconsistency with a different meaning of `f_min` in the mixed-rate interface than to change behavior in such a way.",
      "parentUuid": "115fb48d_b714c497",
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f05b9f7_e6ca7ad7",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 10
      },
      "lineNbr": 340,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-10-28T00:38:05Z",
      "side": 1,
      "message": "please update the docstring so that it says lowest/highest *central* frequency. The current wording can be well interpreted as actual passband boundaries, and indeed that\u0027s what the example output below is checking. These examples should be changed so that they are aligned at the usual 50GHz grid, IMHO (it\u0027s OK to add exotic channels, but I think it\u0027s important to also test for the usual case).",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 340,
        "endChar": 39
      },
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "061093f3_5b58529e",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 10
      },
      "lineNbr": 340,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-10-28T17:48:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f05b9f7_e6ca7ad7",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 340,
        "endChar": 39
      },
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f7a7fab_b870b0f7",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 10
      },
      "lineNbr": 355,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-10-28T00:38:05Z",
      "side": 1,
      "message": "this probably needs changing, right?",
      "range": {
        "startLine": 355,
        "startChar": 57,
        "endLine": 355,
        "endChar": 61
      },
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeb4ca90_88f0d4d0",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 10
      },
      "lineNbr": 355,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-10-28T17:48:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f7a7fab_b870b0f7",
      "range": {
        "startLine": 355,
        "startChar": 57,
        "endLine": 355,
        "endChar": 61
      },
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bde4c1f_4086a778",
        "filename": "tests/test_parser.py",
        "patchSetId": 10
      },
      "lineNbr": 269,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-10-28T00:38:05Z",
      "side": 1,
      "message": "nit: unrelated change, but I think the `print` statement can be removed anyway",
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3703c43_44235d99",
        "filename": "tests/test_parser.py",
        "patchSetId": 10
      },
      "lineNbr": 269,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-10-28T17:48:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bde4c1f_4086a778",
      "revId": "4ea98dd715f75ab24652756887609069aef639bc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}