{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "339492cb_3d6965ef",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "Not sure this is a good place for channel power: it may change at each OMS start for a given channel spanning several OMS. so this is rather something to be specified per degree out of ROADM. or as a general value as it was in the SI container (again, this is well described in the IETF model)",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "877157b9_58bfbcf7",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-09-15T14:32:21Z",
      "side": 1,
      "message": "Good point; it\u0027s probably a good idea to ignore flexgrid completely at this point and only focus on the fixed-grid scenario. That said, one still needs \"some field\" to put that initial per-channel launch power into the simulation engine (e.g., the transmission-main-example --power option).",
      "parentUuid": "339492cb_3d6965ef",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6abd1bd5_35de25df",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-12-01T15:45:24Z",
      "side": 1,
      "message": "Just to clarify -- with the current pending work on the flexgrid+multirate, I expect this section to change. So I\u0027ve undone the \"preparations for flexgrid\", and there\u0027s no `one-channel-common-properties` indirection anymore. OTOH, I left the `/tip-sim:simulation/spectrum/grid` choice \u0026 case in place. This is intended to act as a replacement of the SI thing we use in the legacy JSON.",
      "parentUuid": "877157b9_58bfbcf7",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac878dc_f260ff22",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "The gain mode should not be used this way: it is used to apply user defined gains, and avoid autodesign to change gain values according to inconsistent power targets. by the way it does not compensate exactly the span loss: this depends on the power target. change to : apply user defined gain and if none is defined, use default target power to compute gain",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7573a57_1d096d6f",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-06-09T19:19:11Z",
      "side": 1,
      "message": "I hope this is fixed now.",
      "parentUuid": "aac878dc_f260ff22",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac10e695_78f93347",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "power mode is independent of per span power optimization, and the range does not exactly correspond to short/long spans, since it depends on loss and not on km. It is also not really proportional to the dB difference, since it adapts to each amp max power. So I think that the inclusion of \"delta_power_range_db\" in this container is misleading and the naming does not make sense. why not keeping the initial names ? \npower-range-optimization-max-value?  or something more close to the current naming?",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5222d51d_5270400e",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-06-09T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac10e695_78f93347",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dff27a6b_59b39d1c",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "wrong name ?",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efe44250_44f52dc8",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-06-09T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dff27a6b_59b39d1c",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5485bb81_9819664f",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "wrong name?",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7156fe82_176371ec",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-06-09T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5485bb81_9819664f",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92495658_7b334d45",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "wrong name ? power sweep is also used for another",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "633fa484_ea46aec7",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-06-09T19:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92495658_7b334d45",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de18cdec_f7a4d23b",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "but the list may also contain no authorized amplifiers ! such as booster types... how do you filter ?",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbb6bce7_eb728069",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-09-15T14:32:21Z",
      "side": 1,
      "message": "If empty, it means that the autodesign cannot pick any amplifier when it needs to split a fiber, and that will likely result in an error message visible to the user. That\u0027s how I think the code should work.\n\nSimilarly, each ROADM model should contain a list of allowed boosters and preamps. If none are listed, it means that this particular ROADM model does not allow placement of any boosters/preamps. If there\u0027s just one model for each, it might also mean that it\u0027s, say, a 1U Lumentum-style or CzechLight-style pizza box with a preamp/booster already factory-integrated.",
      "parentUuid": "de18cdec_f7a4d23b",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89cc659c_9e377fc3",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-12-01T15:45:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbb6bce7_eb728069",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5028cd3_b1e45bfa",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "It would make sense to have an extended gain range per amp type in my opinion",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a303ad7a_3ee8318d",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-09-15T14:32:21Z",
      "side": 1,
      "message": "Yes, I agree, but at the same time I\u0027m confused because that\u0027s what you pointed out as a mistake in my previous patch at https://review.gerrithub.io/c/Telecominfraproject/oopt-gnpy/+/479559/3/gnpy/yang/tip/tip-photonic-equipment.yang#162 . \n\nEither way, the current code does not support this feature, so I think it\u0027s better to get the YANG in, and change this one once the underlying code gets updated. I\u0027ve now marked this leaf as deprecated.",
      "parentUuid": "b5028cd3_b1e45bfa",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711ca3fa_57d5f1bf",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-08-25T07:08:12Z",
      "side": 1,
      "message": "This is not really true with the current implementation. Individual fiber spans can still be longer than maximal-span-length (max_length in eqpt_config.json) even after splitting fibers by autodesign.",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41fba720_cafb3a60",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "euh, nope... this is a different thing: this is padding, not splitting",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b20a752e_66ebeeaa",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-09-15T14:32:21Z",
      "side": 1,
      "message": "Ack, thanks",
      "parentUuid": "41fba720_cafb3a60",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2209499e_d6d5980f",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-08-19T14:55:20Z",
      "side": 1,
      "message": "we still have pending the merging work from Jean -luc that introduced the possibility to use raman amplifier in autodesign, and the work from polito that effectively propagates with the raman effects. We use the first one in Orange (simplified noide accumulation only) and this value is needed.",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72c18773_f79c18a8",
        "filename": "gnpy/yang/tip/tip-photonic-simulation.yang",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-09-15T14:32:21Z",
      "side": 1,
      "message": "Well, getting autodesign + Raman working is, I\u0027m afraid, a bit out of scope for now. Rather than spending time implementing support for these \"faux-Raman\" (i.e., very small or even negative NF) amplifiers, I took the liberty to completely ignore all of their parameters. Plugging in the \"RamanFiber\", on the other hand, was very easy, so I implemented that.",
      "parentUuid": "2209499e_d6d5980f",
      "revId": "5915bc55e9918247dc0e414368bdef329470b18a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}