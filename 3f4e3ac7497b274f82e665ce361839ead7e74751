{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "16a8830c_849d68be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T16:11:13Z",
      "side": 1,
      "message": "I hope this new version help to simplify the code without removing any feature. The error message in case of dimension mismatch provides less information in this case.",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81a8ffa3_207c2225",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:23:10Z",
      "side": 1,
      "message": "Thanks for the comments. I will include them in the next version.",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "005c0cdf_3e4a630d",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-05-17T21:55:51Z",
      "side": 1,
      "message": "Just a question but what is the benefit of using numpy.squeeze instead of just numpy.array here?",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1fe3858_15fc7d87",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:23:10Z",
      "side": 1,
      "message": "It ensures that the output is a 1 dim array in specific cases. It can be redundant, but for example can fix an input as [[a,b,...]]. It is not essential.",
      "parentUuid": "005c0cdf_3e4a630d",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfffb70e_0f754062",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 192,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-05-17T21:55:51Z",
      "side": 1,
      "message": "Maybe this is premature optimization but isn\u0027t numpy.full meant to be used for this (instead of multiplying with ones)? Or if signal is already a list, just use numpy.array or numpy.squeeze (I think this was done in the earlier version using a dimension_reshape function)? It just seems a bit strange to perform all these multiplications by 1 even it it makes the code compact.",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3572f9e1_6cc277fe",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 192,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:23:10Z",
      "side": 1,
      "message": "Thanks for the comment. numpy.full can be the right choice here, it would work in both cases, if signal is a scalar or it is an array or a list and raises the same error if the dimensions does not match.",
      "parentUuid": "bfffb70e_0f754062",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2a629cf_47ff375a",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 192,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3572f9e1_6cc277fe",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a853f2_808f2d85",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2021-05-17T21:55:51Z",
      "side": 1,
      "message": "Why the factor 2 here?",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "829cdd80_08dcdeea",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:23:10Z",
      "side": 1,
      "message": "My mistake :)",
      "parentUuid": "11a853f2_808f2d85",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afe7ba17_9b1e9043",
        "filename": "gnpy/core/info.py",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1017876
      },
      "writtenOn": "2021-05-17T22:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "829cdd80_08dcdeea",
      "revId": "3f4e3ac7497b274f82e665ce361839ead7e74751",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}