{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2867e013_18734456",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 12,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "it\u0027s `default_values`",
      "range": {
        "startLine": 12,
        "startChar": 51,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaff2850_74f30df4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 12,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2867e013_18734456",
      "range": {
        "startLine": 12,
        "startChar": 51,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa991800_09f0b3f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 50,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "For the record I\u0027m not a fan of extending the legacy JSON format at all, but I of course understand the motivation and won\u0027t be blocking this.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 47
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "347d762f_e422994a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 101,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "this is not relevant to this commit",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 101,
        "endChar": 42
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e5eed13_a2e83195",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 101,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "347d762f_e422994a",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 101,
        "endChar": 42
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2452d0e_1313c620",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 115,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "nit: I\u0027m confused by the formatting; this looks like a list of something, but it\u0027s not a list (and it should not be a list, anyway). Remove the tab indent?",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5fae8d7_8997bc22",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 115,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2452d0e_1313c620",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acd14a9e_da1030e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 127,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "`--power`, and also everywhere else, please",
      "range": {
        "startLine": 127,
        "startChar": 50,
        "endLine": 127,
        "endChar": 55
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e3b28d8_ef6e1ce5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 127,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acd14a9e_da1030e2",
      "range": {
        "startLine": 127,
        "startChar": 50,
        "endLine": 127,
        "endChar": 55
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90592cc6_27a458df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 179,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "I\u0027m picking a random place for this comment, but in general it\u0027s much easier for me to read unabbreviated English comments. I would appreciate if you call this \"power\", etc.",
      "range": {
        "startLine": 179,
        "startChar": 11,
        "endLine": 179,
        "endChar": 14
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ca2198_61ad1262",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 233,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "This example is confusing to me because the `target_psd_out_mWperGHz` is not used in the expression at the end of the commit",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 233,
        "endChar": 30
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8d39384_01e416d2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 233,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "I dont\u0027t understand the issue",
      "parentUuid": "b9ca2198_61ad1262",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 233,
        "endChar": 30
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "305a34b6_f5fb4ea7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 233,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-18T16:50:49Z",
      "side": 1,
      "message": "The documentation talks about a PSD-based equalization in ROADMs. An example is provided, there\u0027s a ROADM with a PSD-based equalization with the target of 2.717e-4 mW/GHz. The the docs show a calculation which uses two constants, 32e9 and a 64e9, which are not explained. How are they related to the given PSD target? I see that the 2.717e-4 mW/GHz \"roughly corresponds\" to a 1dBm/50GHz (right?), but the readers have to do the math themselves in order to see this. This should be explained in a higher detail so that a layman (like me) can follow what\u0027s going on.",
      "parentUuid": "b8d39384_01e416d2",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 233,
        "endChar": 30
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b19380_a25c0a7c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 61
      },
      "lineNbr": 233,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-18T17:44:27Z",
      "side": 1,
      "message": "2.717e-4 mW/GHz means that a 32GBauds target power will be 0.0086944mW, that is ~ -20.6dBm, while for 64Gbauds, the target will be ~-17.59 dBm. (ie 3dB more, same ratio as the ratio of baud rates)\n This means that the ROADM allocates more power for larger baudrate, proportionnaly to the signal occupation which is assumed to be equal to the baudrate. \n\nis this clearer if I add that ?",
      "parentUuid": "305a34b6_f5fb4ea7",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 233,
        "endChar": 30
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5167e9d4_b5e28cc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 61
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "To be honest, this was quite hard to read for me; the indirection between `RoadmParameters`, default values, etc, seemed rather complex. I\u0027ll continue with other patches in the series and also try to write this from scratch, hopefully in a more compact manner.",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bc9e3f5_7ce370f2",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 222,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "It would help me understand the code better if this docstring said what this member variable is used for (and then maybe how it\u0027s computed, but that\u0027s actually better documented at the place where the actual computation takes place).",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dccb5e25_7d1673f1",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 222,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "self.target_xxx are targets set by user\n\nself.ref_pch_out_dbm is the one computed during propagation. They can be equal and before this change the role of target was also assumed by this variable.\nwith the introduction of different equalization targets, I preferred to clearly separate the role. so now self.ref_pch_out_dbm is no more initialized (None), and is only computed during propagation.",
      "parentUuid": "2bc9e3f5_7ce370f2",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e90e9e3_d99335eb",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 235,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "why is this not checking the `self.target_pch_out_dbm`, and what\u0027s the relation between these two? I see both are initialized in the same way, but that shouldn\u0027t matter here, right?",
      "range": {
        "startLine": 235,
        "startChar": 16,
        "endLine": 235,
        "endChar": 31
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1055b18c_749891e7",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 235,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "I have removed this ambiguity: now self.ref_pch_out_dbm is only for computed value during propagation and self.target_pch_out_dbm the user settings for target equalization",
      "parentUuid": "7e90e9e3_d99335eb",
      "range": {
        "startLine": 235,
        "startChar": 16,
        "endLine": 235,
        "endChar": 31
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f96e296_31a9009a",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 269,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "- If this is a \"reference baudrate\", let\u0027s call it `reference_baudrate` or at least `ref_baudrate`. If it\u0027s something else, document it, please. This applies to other methods as well.\n- The info should be already accessible via `spectral_info.ref_power.ref_carrier.baud_rate`. The code also only accesses `ref_br` when `spectral_info` is not `None`, so there\u0027s no required change of semantics.",
      "range": {
        "startLine": 269,
        "startChar": 31,
        "endLine": 269,
        "endChar": 37
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9099edb_c45184e3",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 269,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "I used the same function for two cases: when there is a spectral_info, then I use spectral_info.ref_power.ref_carrier.baud_rate, and when it is for the reference channel, so no spectral_info.\nI have better separated the cases, and there is no more ambiguity",
      "parentUuid": "3f96e296_31a9009a",
      "range": {
        "startLine": 269,
        "startChar": 31,
        "endLine": 269,
        "endChar": 37
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b34a5f72_d1ab83f2",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 291,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "This returns a numpy array while the other paths return a number (right?), which confuses me a fair bit. I see that it\u0027s explicitly said to be the case later on when this function is called, but I don\u0027t understand why.",
      "range": {
        "startLine": 291,
        "startChar": 19,
        "endLine": 291,
        "endChar": 24
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe6fbb7c_2efff9aa",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 291,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "this has been moved to the get_roadm_target_power function",
      "parentUuid": "b34a5f72_d1ab83f2",
      "range": {
        "startLine": 291,
        "startChar": 19,
        "endLine": 291,
        "endChar": 24
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd9c9073_e7c86337",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 294,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "These three methods are just not readable; they check a similar thing, they have the same docstring, but they do something slightly different. This makes the patch hard to review. Can you please refactor this, double-check the docstrings and add example usage so that I can reason about the code?",
      "range": {
        "startLine": 269,
        "startChar": 4,
        "endLine": 294,
        "endChar": 93
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713dd328_2b205c9f",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 294,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "I have refactored and I hope it is easier to read",
      "parentUuid": "bd9c9073_e7c86337",
      "range": {
        "startLine": 269,
        "startChar": 4,
        "endLine": 294,
        "endChar": 93
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf0191fb_51a0b31e",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 307,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "can you please rephrease this?",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 307,
        "endChar": 91
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b70c711_25ed8e72",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 61
      },
      "lineNbr": 307,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "The equalization type is now handled in the functions",
      "parentUuid": "cf0191fb_51a0b31e",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 307,
        "endChar": 91
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea84b260_82a2a5e5",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 236,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "On a quick glance this appears to duplicate `gnpy.core.elements.Roadm.get_target_power()`. See my comment for `set_roadm_output_targets`, and remove this function, please.",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7963434a_1c9a0fe1",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 236,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T13:18:15Z",
      "side": 1,
      "message": "I can not rely on the element.Roadm.get_target() if the ROADM has not been properly initialized. and the constructor is called at a moment where ROADMs are not yet connected. So I can not know the degrees.\n\nSo I can only do this change if the set_roadm_output_targets is kept in the design phase",
      "parentUuid": "ea84b260_82a2a5e5",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c335cb97_0a637979",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 236,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "OK I hav done as suggested",
      "parentUuid": "7963434a_1c9a0fe1",
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9aa08b9_18ef451e",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 364,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "These variables are already set to something from the constructor, but they are overridden here once again, now apparently based on the actual network topology. There\u0027s no need to do that; just leave them as-set-in-the-constructor, and instead let the `elements.Roadm.get_target_power_XXX` methods do the trick, falling back to the default if needed.\n\nI\u0027m OK with checking for invalid next-hop/degree names of course, but this pattern of code where something gets initialized once and then maybe-overwritten from a different module looks rather confusing to me.",
      "range": {
        "startLine": 363,
        "startChar": 0,
        "endLine": 364,
        "endChar": 74
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad470ed5_05adb738",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 364,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T13:18:15Z",
      "side": 1,
      "message": "The issue is that I need the target powers at design phase and before propagation to properly design amplifiers gain in the set_egress_amplifier.\nthe computations done here were previously placed there.\n\nand I prefer to have them initialized at design before propagation, because of the future refactor: otherwise, I will not be able to get rid of p_spani.\n\nThen I can not initialize them with the constructor because in json_io there is no knowledge of the topology yet.\n\nbesides, if I remove this the degree will only be computed and saved to autodesign if there is a propagation in the roadm, which is not correct in my opinion.\n\nSo I don\u0027t know how to do differently.",
      "parentUuid": "c9aa08b9_18ef451e",
      "range": {
        "startLine": 363,
        "startChar": 0,
        "endLine": 364,
        "endChar": 74
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c130d1d7_23902fee",
        "filename": "gnpy/core/network.py",
        "patchSetId": 61
      },
      "lineNbr": 364,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T17:21:39Z",
      "side": 1,
      "message": "OK I found out :)",
      "parentUuid": "ad470ed5_05adb738",
      "range": {
        "startLine": 363,
        "startChar": 0,
        "endLine": 364,
        "endChar": 74
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "612639df_03199772",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 61
      },
      "lineNbr": 97,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "why not simply:\n```\nif \u0027target_pch_out_db\u0027 in kwargs and `target_psd_out_mWperGHz\u0027 in kwargs:\n  raise ParameterError(...)\n```",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 97,
        "endChar": 69
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a37363_45f28872",
        "filename": "gnpy/core/parameters.py",
        "patchSetId": 61
      },
      "lineNbr": 97,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "I am adding more equalization types and I think then I would need to add the combinations of wrong case which might become difficult to read with if I have a,b,c,d different equalization types",
      "parentUuid": "612639df_03199772",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 97,
        "endChar": 69
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5deed4_36be6b1c",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 61
      },
      "lineNbr": 350,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "These are specific to the legacy JSON format, so please move them to that module.",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 350,
        "endChar": 15
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea1156d1_130a15fd",
        "filename": "gnpy/core/utils.py",
        "patchSetId": 61
      },
      "lineNbr": 350,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d5deed4_36be6b1c",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 350,
        "endChar": 15
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d59c3c2a_bf9d3f01",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 61
      },
      "lineNbr": 475,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "So it looks to me that the constructor sets something to the default value(s), and this part of the code removes these defaults. That sounds complex; why is it done in this way?",
      "range": {
        "startLine": 473,
        "startChar": 1,
        "endLine": 475,
        "endChar": 98
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "931f6a3c_bf615c90",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 61
      },
      "lineNbr": 475,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T18:50:12Z",
      "side": 1,
      "message": "I need to refactor this, but did not find time yet",
      "parentUuid": "d59c3c2a_bf9d3f01",
      "range": {
        "startLine": 473,
        "startChar": 1,
        "endLine": 475,
        "endChar": 98
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce3a153_428ba0a4",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 61
      },
      "lineNbr": 475,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-06T08:35:10Z",
      "side": 1,
      "message": "here is the reasoning:\n- extra_params contains default from equipment.\n- element instance might contain a different equalization choice\n- so the default can not be applied.\n\nInstead I could remove the equalization from equipment loading, and just find the equalization here.\nwould this be better ?",
      "parentUuid": "931f6a3c_bf615c90",
      "range": {
        "startLine": 473,
        "startChar": 1,
        "endLine": 475,
        "endChar": 98
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d0d6bd5_117242db",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 61
      },
      "lineNbr": 475,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-09T17:31:38Z",
      "side": 1,
      "message": "I have tried to change this as I proposed, but I think I cannot. here is the explanation:\n\n- I cannot remove the default equalization from the equipement loading, because I will need it afterwards for per degrees equalization checking\n- extra_params is a generic means to upload all equipment default values in elements, so I can not change extra_param behaviour without impacting all elements.\n- temp \u003d merge_amplifier_restrictions(temp, extra_params.__dict__)    is applied also on ROADMs so if default equalization is not removed at this point it will be added to the existing one in element.\n- I cannot remove the extra equalization after this point, because then I would not know if the roadm config contained 2 equalizations.\n\nSo I think this is the only way.\nHowever I refactored a bit so that i don\u0027t remove the equalization from the default, I just don\u0027t use it.",
      "parentUuid": "dce3a153_428ba0a4",
      "range": {
        "startLine": 473,
        "startChar": 1,
        "endLine": 475,
        "endChar": 98
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3230e8_9a0c5a07",
        "filename": "tests/test_roadm_restrictions.py",
        "patchSetId": 61
      },
      "lineNbr": 256,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2022-11-03T09:00:08Z",
      "side": 1,
      "message": "This should have been part of 18610fb7a94bd37bc536e4d0cbfb43bc14161035; fixed via: https://review.gerrithub.io/c/Telecominfraproject/oopt-gnpy/+/545640",
      "range": {
        "startLine": 256,
        "startChar": 67,
        "endLine": 256,
        "endChar": 101
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f9fdf95_7fd7e3d5",
        "filename": "tests/test_roadm_restrictions.py",
        "patchSetId": 61
      },
      "lineNbr": 256,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2022-11-04T13:18:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad3230e8_9a0c5a07",
      "range": {
        "startLine": 256,
        "startChar": 67,
        "endLine": 256,
        "endChar": 101
      },
      "revId": "97b5d4fba2ef3c5d77cb98c283bfe5eb81172a97",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}